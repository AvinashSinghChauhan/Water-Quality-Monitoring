[{"id":"a69dfb2e.39c3a8","type":"tab","label":"Water Quality Monitoring","disabled":false,"info":""},{"id":"62a0653e.dc38fc","type":"cloudant in","z":"a69dfb2e.39c3a8","name":"","cloudant":"3c1cc75.b98d338","database":"dev_db","service":"iot-db-19241","search":"_all_","design":"","index":"","x":100,"y":700,"wires":[["6baaef6a.efc9d","a533d5da.e4b908","e5eb0080.0af3","1bc90da7.32a382","dcd97a87.e70f48","e754c6fa.9d6108","feb937e.53b27c8","5340055e.56858c","90173088.b2ea7"]]},{"id":"93c30c31.d26b9","type":"ui_chart","z":"a69dfb2e.39c3a8","name":"","group":"b6db82d0.79eb8","order":3,"width":8,"height":7,"label":"Temperature-Time","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"fill out the filters to see the distribution.","dot":true,"ymin":"","ymax":"","removeOlder":"1","removeOlderPoints":"100","removeOlderUnit":"3600","cutout":0,"useOneColor":true,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":810,"y":460,"wires":[[]]},{"id":"6baaef6a.efc9d","type":"function","z":"a69dfb2e.39c3a8","name":"ChangeToPlotData","func":"var starttime = flow.get(\"start-time\");\nvar endtime = flow.get(\"end-time\");\nvar devicelocation=flow.get(\"dropdownLocation\");\nlocationLength=devicelocation.length;\nif( msg.payload.length === 0 ) {\n     msg.payload = [] ;\n    return msg;\n}\n\n// The Array has this structure, inserting the first element as a template.\n/*var ChartData = [ {\"series\":[\"Data\"],\n                   \"data\":[[{\"x\":msg.payload[0].payload.time,\"y\":msg.payload[0].payload.temp}]],\n                   \"labels\":[\"Data\"]}];*/\n                   \nvar ChartData = [ {\"series\":[\"Temperature\"],\n                   \"data\":[[]],\n                   \"labels\":[\"Temperature\"]}];\n                   \nif(locationLength===0 ){\n// Start at 1 because we've already added element 0 in the initial array definition\nfor( var i=0; i < msg.payload.length; i++ ) {\n    if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) ) {\n        // This temperature reading is within the Date Range\n        ChartData[0].data[0].push( { \"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.temp } );\n    }    \n}\n}\nelse\n{\n    for(  i=0; i < msg.payload.length; i++ ) {\n   name1 = msg.payload[i].payload.name;\n   if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) && (devicelocation.includes(name1)) ) {\n        ChartData[0].data[0].push( { \"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.temp } );\n       }\n\n}\n \n}\n// Now we need to sort on the time so that we give the Chart node an array in time order\nChartData[0].data[0].sort(function sortNumber(a,b) { return a.x - b.x; });\n\nmsg.payload =ChartData;\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":430,"y":460,"wires":[["93c30c31.d26b9","ac65f99b.6d8bc8"]]},{"id":"74f8eabd.ee1904","type":"function","z":"a69dfb2e.39c3a8","name":"Format Incoming Payload","func":"var index=Math.floor(Math.random() * 4);\nvar latitute =[12.972442,28.7041,19.0760,22.5726];\nvar longitute=[77.580643,77.1025,72.8777,88.3639];\nvar namearr=[\"Bangalore\",\"Delhi\",\"Mumbai\",\"Kolkata\"];\nmsg.payload={\n    time: new Date().getTime(),\n    temp: msg.payload.d.temp,\n    humidity: msg.payload.d.humidity,\n    ph:((Math.random() * 13) + 1).toFixed([3]),\n    lat:latitute[index],\n    lon:longitute[index],\n    name:namearr[index]\n};    \n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":430,"y":180,"wires":[["5e5f5aac.cac7e4","12698ec7.5638c1","ea0bace7.370ac"]]},{"id":"5e5f5aac.cac7e4","type":"cloudant out","z":"a69dfb2e.39c3a8","name":"","cloudant":"3c1cc75.b98d338","database":"dev_db","service":"iot-db-19241","payonly":false,"operation":"insert","x":740,"y":180,"wires":[]},{"id":"7b10783a.d90f98","type":"comment","z":"a69dfb2e.39c3a8","name":"Sending Data from IOT sensors to IBM Cloudant","info":"","x":220,"y":120,"wires":[]},{"id":"c7b47ce0.1b3b2","type":"comment","z":"a69dfb2e.39c3a8","name":"Plotting stored cloudant data","info":"","x":160,"y":420,"wires":[]},{"id":"9c29d9d3.968f48","type":"ui_toast","z":"a69dfb2e.39c3a8","position":"top right","displayTime":"5","highlight":"","sendall":true,"outputs":0,"ok":"OK","cancel":"","raw":true,"topic":"","name":"","x":730,"y":380,"wires":[]},{"id":"ebe5969d.aae088","type":"template","z":"a69dfb2e.39c3a8","name":"Alert Msg","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"Alert : Critical Value Detected {{payload.d.temp}}","output":"str","x":540,"y":380,"wires":[["9c29d9d3.968f48"]]},{"id":"d998dd5c.cfbab","type":"ui_chart","z":"a69dfb2e.39c3a8","name":"","group":"bdac16da.cd72b8","order":1,"width":0,"height":0,"label":"Humidity","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"0","ymax":"100","removeOlder":"10","removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":560,"y":340,"wires":[[]]},{"id":"d0a571c5.dfa0a","type":"ui_chart","z":"a69dfb2e.39c3a8","name":"","group":"20e8f87e.0a7ee8","order":1,"width":0,"height":0,"label":"Temperature","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"0","ymax":"50","removeOlder":"10","removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":650,"y":260,"wires":[[]]},{"id":"1159c031.b7764","type":"change","z":"a69dfb2e.39c3a8","name":"Chart Temperature","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.d.temp","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":390,"y":260,"wires":[["d0a571c5.dfa0a","47725c4a.70f4c4"]]},{"id":"2a2961d8.81384e","type":"debug","z":"a69dfb2e.39c3a8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":230,"y":160,"wires":[]},{"id":"d7c95dd9.9bf9b","type":"change","z":"a69dfb2e.39c3a8","name":"Chart Humidity","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.d.humidity","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":360,"y":340,"wires":[["d998dd5c.cfbab","7d2a65d7.f84f2c"]]},{"id":"8e940ae7.59fc48","type":"switch","z":"a69dfb2e.39c3a8","name":"Warn on High Values","property":"payload.d.temp","propertyType":"msg","rules":[{"t":"gt","v":"30","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":340,"y":380,"wires":[["ebe5969d.aae088"]]},{"id":"91cb317.d7f42d","type":"inject","z":"a69dfb2e.39c3a8","name":"","repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"true","payloadType":"bool","x":170,"y":1480,"wires":[["93c77c04.17c12","9b0e426c.98143"]]},{"id":"9b0e426c.98143","type":"change","z":"a69dfb2e.39c3a8","name":"Start Date","rules":[{"t":"set","p":"payload","pt":"msg","to":"1451624400000","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":310,"y":1460,"wires":[["961b8b3e.0f4698"]]},{"id":"93c77c04.17c12","type":"change","z":"a69dfb2e.39c3a8","name":"End Date","rules":[{"t":"set","p":"payload","pt":"msg","to":"1577750401000","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":310,"y":1500,"wires":[["50fa0caa.fcf8a4"]]},{"id":"961b8b3e.0f4698","type":"ui_date_picker","z":"a69dfb2e.39c3a8","name":"","label":"Start Date","group":"8f44f5d0.3887b8","order":1,"width":0,"height":0,"passthru":true,"topic":"","x":470,"y":1460,"wires":[["37ad51e3.61bcce"]]},{"id":"50fa0caa.fcf8a4","type":"ui_date_picker","z":"a69dfb2e.39c3a8","name":"","label":"End Date","group":"8f44f5d0.3887b8","order":2,"width":0,"height":0,"passthru":true,"topic":"","x":470,"y":1500,"wires":[["f82cf33e.ff0eb"]]},{"id":"37ad51e3.61bcce","type":"change","z":"a69dfb2e.39c3a8","name":"Start Time Range","rules":[{"t":"set","p":"start-time","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":660,"y":1460,"wires":[["71a59e7e.6e9bf"]]},{"id":"f82cf33e.ff0eb","type":"change","z":"a69dfb2e.39c3a8","name":"End Time Range","rules":[{"t":"set","p":"end-time","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":650,"y":1500,"wires":[["1d0eacd2.03cb23"]]},{"id":"71a59e7e.6e9bf","type":"debug","z":"a69dfb2e.39c3a8","name":"","active":false,"tosidebar":true,"console":false,"complete":"false","x":860,"y":1460,"wires":[]},{"id":"1d0eacd2.03cb23","type":"debug","z":"a69dfb2e.39c3a8","name":"","active":false,"console":"false","complete":"false","x":860,"y":1500,"wires":[]},{"id":"64d8f2b8.7a2d6c","type":"ui_button","z":"a69dfb2e.39c3a8","name":"","group":"8f44f5d0.3887b8","order":5,"width":0,"height":0,"passthru":false,"label":"Load  Data from cloudant","tooltip":"","color":"","bgcolor":"","icon":"","payload":"true","payloadType":"bool","topic":"","x":110,"y":500,"wires":[["62a0653e.dc38fc"]]},{"id":"47725c4a.70f4c4","type":"ui_gauge","z":"a69dfb2e.39c3a8","name":"Gauge","group":"20e8f87e.0a7ee8","order":2,"width":0,"height":0,"gtype":"gage","title":"Temperature","label":"units","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":630,"y":220,"wires":[]},{"id":"7d2a65d7.f84f2c","type":"ui_gauge","z":"a69dfb2e.39c3a8","name":"Gauge","group":"bdac16da.cd72b8","order":2,"width":0,"height":0,"gtype":"gage","title":"Humidity","label":"units","format":"{{value}}","min":0,"max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":510,"y":300,"wires":[]},{"id":"a6e70c4e.6cdec","type":"ui_chart","z":"a69dfb2e.39c3a8","name":"","group":"42f22c1.0d5fbd4","order":1,"width":8,"height":7,"label":"Time-Humidity","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":true,"ymin":"","ymax":"","removeOlder":"1","removeOlderPoints":"100","removeOlderUnit":"3600","cutout":0,"useOneColor":true,"useUTC":false,"colors":["#30b31e","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":820,"y":500,"wires":[[]]},{"id":"30df4983.6b71d6","type":"ui_chart","z":"a69dfb2e.39c3a8","name":"","group":"b6db82d0.79eb8","order":1,"width":8,"height":7,"label":"Temperature-Humidity","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":true,"ymin":"","ymax":"","removeOlder":"1","removeOlderPoints":"100","removeOlderUnit":"3600","cutout":0,"useOneColor":true,"useUTC":false,"colors":["#1f77b4","#ac0678","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":800,"y":540,"wires":[[]]},{"id":"a533d5da.e4b908","type":"function","z":"a69dfb2e.39c3a8","name":"ChangeToPlotData","func":"\nvar starttime = flow.get(\"start-time\");\nvar endtime = flow.get(\"end-time\");\nvar bar={};\nbar.labels = [new Date(msg.payload[0].payload.time).toLocaleTimeString()];\nbar.series = ['temp','humidity'];\nvar data1=[msg.payload[0].payload.temp];\nvar data2=[msg.payload[0].payload.humidity];\nfor( var i=1; i <100 ; i++ ) {\n    if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) ) {\n       \n        data1.push(msg.payload[i].payload.temp);\n        data2.push(msg.payload[i].payload.humidity);\n        bar.labels.push(new Date(msg.payload[i].payload.time).toLocaleTimeString());\n                     \n                 \n    }    \n}\nbar.data=[data1,data2];\nreturn {payload:[bar]};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":430,"y":580,"wires":[["22e91ce5.8ece14"]]},{"id":"22e91ce5.8ece14","type":"ui_chart","z":"a69dfb2e.39c3a8","name":"","group":"42f22c1.0d5fbd4","order":3,"width":8,"height":7,"label":"Temperature-Humidity","chartType":"bar","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":true,"ymin":"0","ymax":"100","removeOlder":"1","removeOlderPoints":"100","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#b3ae1e","#ac0678","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":660,"y":580,"wires":[[]]},{"id":"dcd97a87.e70f48","type":"function","z":"a69dfb2e.39c3a8","name":"Distinct Sensors Location on World Map","func":"\nvar lookup = {};\nvar locationData=[];\nvar result = [];\nvar averagedataParameters=flow.get(\"averageValues\");\n\nfor( var i=1; i < msg.payload.length; i++ ) {\n  var name = msg.payload[i].payload.name;\n\n  if (!(name in lookup)) {\n      locationData.push( {\"lat\":msg.payload[i].payload.lat,\"lon\":msg.payload[i].payload.lon,\"name\":msg.payload[i].payload.name,\"Average Ph\":averagedataParameters[name][0],\"Average Humidity\":averagedataParameters[name][1],\"Average Temperature\":averagedataParameters[name][2],\"radius\": 100,\n    \"icon\": \"globe\",\"popped\":\"True\",\n    \"iconColor\": \"orange\", photoUrl:\"https://www.gstatic.com/webp/gallery/2.jpg\",\n      });\n    lookup[name] = 1;\n    result.push(name);\n  }\n  //,\"Average humidity\":averagedataParameters.avghumidity[name],\"Average Temperature\":averagedataParameters.avgtemp[name]\n}\nmsg.payload = locationData;\nnode.send(msg,averagedataParameters);","outputs":1,"noerr":0,"initialize":"","finalize":"","x":560,"y":740,"wires":[["59efdf1d.cae3b","9b660bb.05f79f8"]]},{"id":"bb51d8ea.31daf8","type":"comment","z":"a69dfb2e.39c3a8","name":"Selecting the Time peroid for which data need to be checked","info":"","x":300,"y":1420,"wires":[]},{"id":"5b6fa82d.f54208","type":"function","z":"a69dfb2e.39c3a8","name":"(Test)extract distinct device-name/ID","func":"\nvar locationData = [{\n        \"name\": \"New Deli\",\n        \"lat\": 28.7041,\n        \"lon\": 77.1025,\n        \"radius\": 100,\n        \"icon\": \"globe\",\n        \"iconColor\": \"orange\"\n   }];\nlocationData.push({\n        \"name\": \"New Delhi\",\n        \"lat\": 28.7041,\n        \"lon\": 77.1025,\n        \"radius\": 100,\n        \"icon\": \"globe\",\n        \"iconColor\": \"orange\"\n   });\n  \nlocationData.push({\n        \"name\": \"New Delhi\",\n        \"lat\": 28.7041,\n        \"lon\": 77.1025,\n        \"radius\": 100,\n        \"icon\": \"globe\",\n        \"iconColor\": \"orange\"\n    });\n  \nlocationData.push({\n        \"name\": \"China\",\n        \"lat\": 35.8617,\n        \"lon\": 104.1954,\n        \"radius\": 100,\n        \"icon\": \"globe\",\n        \"iconColor\": \"orange\"\n    });\nlocationData.push({\n        \"name\": \"kolkata\",\n       \n        \"lat\": 22.5726,\n        \"lon\": 88.3639,\n        \"radius\": 100,\n        \"icon\": \"globe\",\n        \"iconColor\": \"orange\"\n    });\n\n\n//msg.payload = locationData;\n\n//return msg;\n\nvar lookup = {};\nvar locationData1=[]\nvar options=[]\n\nfor( var i=0; i < locationData.length; i++ ) {\n  var name1 = locationData[i].name;\n\n  if (!(name1 in lookup)) {\n      locationData1.push( {\"lat\":locationData[i].lat,\"lon\":locationData[i].lon,\"name\":locationData[i].name,\"radius\": 100,\n    \"icon\": \"globe\",\n    \"iconColor\": \"orange\",\n    \"lebel\":\"hello check\",\n      photoUrl:\"https://www.gstatic.com/webp/gallery/2.jpg\"\n       });\n        \n            var obj = {}; \n            obj[name1] = name1; \n            options.push(obj); \n       \n    lookup[name1] = 1;\n   \n  }\n}\nmsg.payload = locationData1;\nmsg.options=options;\nreturn msg;\n\n","outputs":1,"noerr":0,"x":350,"y":780,"wires":[[]]},{"id":"7b0a8956.7fb488","type":"inject","z":"a69dfb2e.39c3a8","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"true","payloadType":"bool","x":90,"y":780,"wires":[["5b6fa82d.f54208"]]},{"id":"a0eab4ad.b31be8","type":"debug","z":"a69dfb2e.39c3a8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":950,"y":1260,"wires":[]},{"id":"ab8ae1f1.a40f4","type":"change","z":"a69dfb2e.39c3a8","name":"Inject /worldmap","rules":[{"t":"set","p":"payload","pt":"msg","to":"<iframe src=\"/worldmap\" height=720px width=1000px ></iframe>","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":580,"y":840,"wires":[["60115a8f.afe6c4"]]},{"id":"60115a8f.afe6c4","type":"ui_template","z":"a69dfb2e.39c3a8","group":"72724859.87e4a8","name":"Embedded Map","order":1,"width":16,"height":12,"format":"<div ng-bind-html=\"msg.payload| trusted\"></div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":false,"templateScope":"local","x":800,"y":840,"wires":[["97c28a10.542008"]]},{"id":"12698ec7.5638c1","type":"change","z":"a69dfb2e.39c3a8","name":"Chart Ph","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.ph","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":480,"y":120,"wires":[["1a2a6549.dc390b","ac388530.df6238"]]},{"id":"ac388530.df6238","type":"ui_gauge","z":"a69dfb2e.39c3a8","name":"Gauge","group":"2828a1e9.86226e","order":2,"width":9,"height":6,"gtype":"gage","title":"Ph-Value","label":"units","format":"{{value}}","min":0,"max":"15","colors":["#00b500","#e6e600","#ca3838"],"seg1":"7","seg2":"10","x":750,"y":40,"wires":[]},{"id":"1a2a6549.dc390b","type":"ui_chart","z":"a69dfb2e.39c3a8","name":"","group":"2828a1e9.86226e","order":1,"width":9,"height":5,"label":"Ph-Value","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"0","ymax":"15","removeOlder":"10","removeOlderPoints":"","removeOlderUnit":"60","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":760,"y":120,"wires":[[]]},{"id":"e5eb0080.0af3","type":"function","z":"a69dfb2e.39c3a8","name":"Average of parameters for given range of dates","func":"//store avg location wise\nvar starttime = flow.get(\"start-time\");\nvar endtime = flow.get(\"end-time\");\nvar distinctLocation=flow.get(\"Distinct-Sensor-Location\");\nvar avgph=[],avghumidity=[],avgtemp=[];\nvar avgphlookup={},avghumiditylookup={},avgtemplookup={};\nvar locationwisedata={};\n//keeps location wise parameters and their total sum\nfor( var i=0; i < msg.payload.length; i++ ) {\n  var name1 = msg.payload[i].payload.name;\n   if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) ) {\n        \n         if (!(name1 in avgphlookup)) {\n            avgphlookup[name1] = [parseInt(msg.payload[i].payload.ph),1];\n            avghumiditylookup[name1]=[msg.payload[i].payload.humidity,1];\n            avgtemplookup[name1]=[msg.payload[i].payload.temp,1];\n  }\n  else\n  {\n      avgphlookup[name1][0] =avgphlookup[name1][0]+ parseInt(msg.payload[i].payload.ph);\n      avgphlookup[name1][1]++;\n      avghumiditylookup[name1][0]=avghumiditylookup[name1][0]+msg.payload[i].payload.humidity;\n      avghumiditylookup[name1][1]++;\n      avgtemplookup[name1][0]=avgtemplookup[name1][0]+msg.payload[i].payload.temp;\n      avgtemplookup[name1][1]++;\n  }\n\n        \n    }\n\n}\n\nfor(i=0;i<distinctLocation.length;i++)\n{\n   /* var obj = {}; \n            obj[distinctLocation[i]] =avgphlookup[distinctLocation[i]][0]/avgphlookup[distinctLocation[i]][1] ; \n    //locationwisedata[distinctLocation[i]].push(obj) ;      \n    //avgph.push(obj);\n    // obj = {}; \n            obj[distinctLocation[i]] =avghumiditylookup[distinctLocation[i]][0]/avghumiditylookup[distinctLocation[i]][1] ; \n    locationwisedata[distinctLocation[i]].push(obj) ;         \n    avghumidity.push(obj);\n     obj = {}; \n            obj[distinctLocation[i]] =avgtemplookup[distinctLocation[i]][0]/avgtemplookup[distinctLocation[i]][1] ; \n    locationwisedata[distinctLocation[i]].push(obj) ;         \n    avgtemp.push(obj);\n    */\n    var ph =avgphlookup[distinctLocation[i]][0]/avgphlookup[distinctLocation[i]][1] ; \n    var humidity =avghumiditylookup[distinctLocation[i]][0]/avghumiditylookup[distinctLocation[i]][1] ; \n    var temperature =avgtemplookup[distinctLocation[i]][0]/avgtemplookup[distinctLocation[i]][1] ;\n   // obj = {}; \n            //obj[distinctLocation[i]]=[ph,humidity,temperature];\n    locationwisedata[distinctLocation[i]]=[ph,humidity,temperature];\n}\n//avgph=(avgphlookup[name1])/count;\n//avgtemp/=count;\n//avghumidity/=count;\n\n\n\nmsg.payload=locationwisedata;\nreturn msg;\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":480,"y":700,"wires":[["fc4c923b.68482"]]},{"id":"1bc90da7.32a382","type":"function","z":"a69dfb2e.39c3a8","name":"changetoPlot time-humidity","func":"var starttime = flow.get(\"start-time\");\nvar endtime = flow.get(\"end-time\");\nvar devicelocation=flow.get(\"dropdownLocation\");\nlocationLength=devicelocation.length;\nif( msg.payload.length === 0 ) {\n     msg.payload = [] ;\n    return msg;\n}\n\n// The Array has this structure, inserting the first element as a template.\n/*var ChartData = [ {\"series\":[\"Data\"],\n                   \"data\":[[{\"x\":msg.payload[0].payload.time,\"y\":msg.payload[0].payload.temp}]],\n                   \"labels\":[\"Data\"]}];*/\n                   \nvar ChartData = [ {\"series\":[\"humidity\"],\n                   \"data\":[[]],\n                   \"labels\":[\"humidity\"]}];\nif(locationLength===0){\n// Start at 1 because we've already added element 0 in the initial array definition\nfor( var i=0; i < msg.payload.length; i++ ) {\n    if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) ) {\n        // This temperature reading is within the Date Range\n        ChartData[0].data[0].push( { \"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.humidity } );\n    }    \n}\n}\nelse\n{\n    for(  i=0; i < msg.payload.length; i++ ) {\n   name1 = msg.payload[i].payload.name;\n   if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) && (devicelocation.includes(name1)) ) {\n        ChartData[0].data[0].push( { \"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.humidity } );\n       }\n\n}\n \n}\n// Now we need to sort on the time so that we give the Chart node an array in time order\nChartData[0].data[0].sort(function sortNumber(a,b) { return a.x - b.x; });\n\nmsg.payload = ChartData;\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":460,"y":500,"wires":[["a6e70c4e.6cdec"]]},{"id":"e754c6fa.9d6108","type":"function","z":"a69dfb2e.39c3a8","name":"temp-humidity","func":"var starttime = flow.get(\"start-time\");\nvar endtime = flow.get(\"end-time\");\nvar devicelocation=flow.get(\"dropdownLocation\");\nlocationLength=devicelocation.length;\nif( msg.payload.length === 0 ) {\n    // The historical database does not contain values for this date range \n    // Reset the chart with a blank array\n    msg.payload = [] ;\n    return msg;\n}\n\n// The Array has this structure, inserting the first element as a template.\n\nvar chart = [  {\"series\":[\"Temperature\",\"Humidity\"],\n                \"data\":[[],[]],\n                \"labels\":[\"\"]}];\n\nif(locationLength===0){\nfor( var i=0; i < msg.payload.length; i++ ) {\n    if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) ) {\n        // This temperature reading is within the Date Range\n        chart[0].data[0].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.temp});\n                     \n                   chart[0].data[1].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.humidity});\n    }    \n}\n}\nelse\n{\n   for(  i=0; i < msg.payload.length; i++ ) {\n        name1 = msg.payload[i].payload.name;\n    if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime)&&(devicelocation.includes(name1)) ) {\n        // This temperature reading is within the Date Range\n        chart[0].data[0].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.temp});\n                     \n        chart[0].data[1].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.humidity});\n    }    \n} \n}\n// Now we need to sort on the time so that we give the Chart node an array in time order\nchart[0].data[0].sort(function sortNumber(a,b) { return a.x - b.x; });\nchart[0].data[1].sort(function sortNumber(a,b) { return a.x - b.x; });\nmsg.payload = chart;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":420,"y":540,"wires":[["30df4983.6b71d6"]]},{"id":"cb35e9fe.204b28","type":"function","z":"a69dfb2e.39c3a8","name":"Display Data for given Range & Location","func":"var starttime = flow.get(\"start-time\");\nvar endtime = flow.get(\"end-time\");\nvar devicelocation=flow.get('dropdownLocation');\nlocationLength=devicelocation.length;\n//var options=[{\"All\":\"All\"}];not required to All option(if o/p array size==0 then use All)\nif(locationLength===0){\nfor( var i=1; i < msg.payload.length; i++ ) {\n  var name1 = msg.payload[i].payload.name;\n   if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) ) {\n   \n    }\n}\n}\nelse\n{\n    for(  i=1; i < msg.payload.length; i++ ) {\n   name1 = msg.payload[i].payload.name;\n   if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) && (name1 in devicelocation) ) {\n       }\n\n}\n\n}\nmsg.payload={};\nreturn msg;\n\n","outputs":1,"noerr":0,"x":260,"y":1560,"wires":[[]]},{"id":"ac65f99b.6d8bc8","type":"debug","z":"a69dfb2e.39c3a8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":680,"y":420,"wires":[]},{"id":"ea0bace7.370ac","type":"switch","z":"a69dfb2e.39c3a8","name":"Warn on High Values","property":"payload.ph","propertyType":"msg","rules":[{"t":"gt","v":"10","vt":"num"}],"checkall":"true","repair":false,"outputs":1,"x":160,"y":40,"wires":[["1210bd00.a21c93"]]},{"id":"1210bd00.a21c93","type":"template","z":"a69dfb2e.39c3a8","name":"Alert Msg","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"Alert :PH Critical Value Detected {{payload.ph}}","output":"str","x":360,"y":40,"wires":[["c2172274.5685a"]]},{"id":"c2172274.5685a","type":"ui_toast","z":"a69dfb2e.39c3a8","position":"top right","displayTime":"5","highlight":"","sendall":true,"outputs":0,"ok":"OK","cancel":"","raw":true,"topic":"","name":"","x":550,"y":40,"wires":[]},{"id":"97c28a10.542008","type":"debug","z":"a69dfb2e.39c3a8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":810,"y":920,"wires":[]},{"id":"bf638312.88227","type":"ui_button","z":"a69dfb2e.39c3a8","name":"","group":"8f44f5d0.3887b8","order":12,"width":0,"height":0,"passthru":false,"label":"show world Map","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"","x":380,"y":840,"wires":[["ab8ae1f1.a40f4"]]},{"id":"a0d38181.8f00e","type":"ui_dropdown","z":"a69dfb2e.39c3a8","name":"","label":"Select sensor location","tooltip":"","place":"Select option","group":"8f44f5d0.3887b8","order":3,"width":0,"height":0,"passthru":false,"multiple":true,"options":[],"payload":"","topic":"","x":760,"y":1340,"wires":[["3147df39.f99ce"]]},{"id":"3147df39.f99ce","type":"change","z":"a69dfb2e.39c3a8","name":"","rules":[{"t":"set","p":"dropdownLocation","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1020,"y":1340,"wires":[[]]},{"id":"70ca8283.4f61cc","type":"function","z":"a69dfb2e.39c3a8","name":"extract distinct device location for dropdown","func":"\nvar lookup = {};\nvar distinctlocation=[];\n\n//var options=[{\"All\":\"All\"}];not required to All option(if o/p array size==0 then use All)\nvar options=[];\n\nfor( var i=1; i < msg.payload.length; i++ ) {\n  var name1 = msg.payload[i].payload.name;\n\n  if (!(name1 in lookup)) {\n      \n            var obj = {}; \n            obj[name1] = name1; \n            options.push(obj);\n            distinctlocation.push(name1);\n       \n    lookup[name1] = 1;\n   \n  }\n}\n\nmsg.options=options;\nmsg.payload=distinctlocation;\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":450,"y":1340,"wires":[["1edf2884.36fb97","8e376a0a.729ce8"]]},{"id":"63d2273f.cd28d8","type":"cloudant in","z":"a69dfb2e.39c3a8","name":"","cloudant":"3c1cc75.b98d338","database":"dev_db","service":"iot-db-19241","search":"_all_","design":"","index":"","x":200,"y":1340,"wires":[["70ca8283.4f61cc"]]},{"id":"8a974933.9532e8","type":"ui_button","z":"a69dfb2e.39c3a8","name":"","group":"8f44f5d0.3887b8","order":4,"width":0,"height":0,"passthru":false,"label":"Load Sensor Locations","tooltip":"","color":"","bgcolor":"","icon":"","payload":"true","payloadType":"bool","topic":"","x":120,"y":1280,"wires":[["63d2273f.cd28d8"]]},{"id":"f33fc835.0265a8","type":"comment","z":"a69dfb2e.39c3a8","name":"Selecting the Locations for which data need to be checked","info":"","x":370,"y":1220,"wires":[]},{"id":"1edf2884.36fb97","type":"change","z":"a69dfb2e.39c3a8","name":"Distinct-Sensor-Location","rules":[{"t":"set","p":"Distinct-Sensor-Location","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":730,"y":1300,"wires":[["a0eab4ad.b31be8"]],"info":"/* will be an array \r\narray[4]\r\n0: \"Bangalore\"\r\n1: \"Mumbai\"\r\n2: \"Kolkata\"\r\n3: \"Delhi\"\r\n*/"},{"id":"8e376a0a.729ce8","type":"change","z":"a69dfb2e.39c3a8","name":"Deleting Payload","rules":[{"t":"set","p":"payload","pt":"msg","to":"null","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":650,"y":1400,"wires":[["a0d38181.8f00e"]]},{"id":"fc4c923b.68482","type":"change","z":"a69dfb2e.39c3a8","name":"","rules":[{"t":"set","p":"averageValues","pt":"flow","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":820,"y":700,"wires":[[]]},{"id":"9b660bb.05f79f8","type":"debug","z":"a69dfb2e.39c3a8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":840,"y":800,"wires":[]},{"id":"385b67f7.a97378","type":"function","z":"a69dfb2e.39c3a8","name":"","func":"var averagedataParameters=flow.get(\"averageValues\");\nvar distinctLocation=flow.get(\"Distinct-Sensor-Location\");\nfor(var i=0;i<distinctLocation.length;i++)\n{ \n    var c=averagedataParameters[distinctLocation[i]];\n    \n}\n\nmsg.payload=c;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":430,"y":980,"wires":[["23eaded1.85e4c2"]]},{"id":"23738125.2e3a8e","type":"inject","z":"a69dfb2e.39c3a8","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":230,"y":980,"wires":[["385b67f7.a97378"]]},{"id":"23eaded1.85e4c2","type":"debug","z":"a69dfb2e.39c3a8","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":700,"y":1000,"wires":[]},{"id":"feb937e.53b27c8","type":"function","z":"a69dfb2e.39c3a8","name":"ChangeToPlotData","func":"var starttime = flow.get(\"start-time\");\nvar endtime = flow.get(\"end-time\");\nvar devicelocation=flow.get(\"dropdownLocation\");\nlocationLength=devicelocation.length;\nif( msg.payload.length === 0 ) {\n     msg.payload = [] ;\n    return msg;\n}\n\n// The Array has this structure, inserting the first element as a template.\n/*var ChartData = [ {\"series\":[\"Data\"],\n                   \"data\":[[{\"x\":msg.payload[0].payload.time,\"y\":msg.payload[0].payload.temp}]],\n                   \"labels\":[\"Data\"]}];*/\n                   \nvar ChartData = [ {\"series\":[\"Ph-Value\"],\n                   \"data\":[[]],\n                   \"labels\":[\"Ph\"]}];\n                   \nif(locationLength===0 ){\n// Start at 1 because we've already added element 0 in the initial array definition\nfor( var i=0; i < msg.payload.length; i++ ) {\n    if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) ) {\n        // This temperature reading is within the Date Range\n        ChartData[0].data[0].push( { \"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.ph } );\n    }    \n}\n}\nelse\n{\n    for(  i=0; i < msg.payload.length; i++ ) {\n   name1 = msg.payload[i].payload.name;\n   if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) && (devicelocation.includes(name1)) ) {\n        ChartData[0].data[0].push( { \"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.ph } );\n       }\n\n}\n \n}\n// Now we need to sort on the time so that we give the Chart node an array in time order\nChartData[0].data[0].sort(function sortNumber(a,b) { return a.x - b.x; });\n\nmsg.payload =ChartData;\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":430,"y":620,"wires":[["79c8847a.8bd76c"]]},{"id":"79c8847a.8bd76c","type":"ui_chart","z":"a69dfb2e.39c3a8","name":"","group":"ae5d9d70.17b2","order":1,"width":0,"height":0,"label":"Ph-Time","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":true,"ymin":"","ymax":"","removeOlder":"1","removeOlderPoints":"100","removeOlderUnit":"3600","cutout":0,"useOneColor":true,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":640,"y":620,"wires":[[]]},{"id":"5340055e.56858c","type":"function","z":"a69dfb2e.39c3a8","name":"temperature-ph","func":"var starttime = flow.get(\"start-time\");\nvar endtime = flow.get(\"end-time\");\nvar devicelocation=flow.get(\"dropdownLocation\");\nlocationLength=devicelocation.length;\nif( msg.payload.length === 0 ) {\n    // The historical database does not contain values for this date range \n    // Reset the chart with a blank array\n    msg.payload = [] ;\n    return msg;\n}\n\n// The Array has this structure, inserting the first element as a template.\n\nvar chart = [  {\"series\":[\"Temperature\",\"Ph\"],\n                \"data\":[[],[]],\n                \"labels\":[\"\"]}];\n\nif(locationLength===0){\nfor( var i=0; i < msg.payload.length; i++ ) {\n    if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) ) {\n        // This temperature reading is within the Date Range\n        chart[0].data[0].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.temp});\n                     \n                   chart[0].data[1].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.ph});\n    }    \n}\n}\nelse\n{\n   for(  i=0; i < msg.payload.length; i++ ) {\n        name1 = msg.payload[i].payload.name;\n    if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime)&&(devicelocation.includes(name1)) ) {\n        // This temperature reading is within the Date Range\n        chart[0].data[0].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.temp});\n                     \n        chart[0].data[1].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.ph});\n    }    \n} \n}\n// Now we need to sort on the time so that we give the Chart node an array in time order\nchart[0].data[0].sort(function sortNumber(a,b) { return a.x - b.x; });\nchart[0].data[1].sort(function sortNumber(a,b) { return a.x - b.x; });\nmsg.payload = chart;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":400,"y":660,"wires":[["d4600f26.9b10e"]]},{"id":"d4600f26.9b10e","type":"ui_chart","z":"a69dfb2e.39c3a8","name":"","group":"ae5d9d70.17b2","order":2,"width":0,"height":0,"label":"Temperature-Ph","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":true,"ymin":"","ymax":"","removeOlder":"1","removeOlderPoints":"100","removeOlderUnit":"3600","cutout":0,"useOneColor":true,"useUTC":false,"colors":["#1f77b4","#ac0678","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":760,"y":660,"wires":[[]]},{"id":"90173088.b2ea7","type":"function","z":"a69dfb2e.39c3a8","name":"Humidity-ph","func":"var starttime = flow.get(\"start-time\");\nvar endtime = flow.get(\"end-time\");\nvar devicelocation=flow.get(\"dropdownLocation\");\nlocationLength=devicelocation.length;\nif( msg.payload.length === 0 ) {\n    // The historical database does not contain values for this date range \n    // Reset the chart with a blank array\n    msg.payload = [] ;\n    return msg;\n}\n\n// The Array has this structure, inserting the first element as a template.\n\nvar chart = [  {\"series\":[\"Humidity\",\"Ph\"],\n                \"data\":[[],[]],\n                \"labels\":[\"\"]}];\n\nif(locationLength===0){\nfor( var i=0; i < msg.payload.length; i++ ) {\n    if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime) ) {\n        // This temperature reading is within the Date Range\n        chart[0].data[0].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.humidity});\n                     \n                   chart[0].data[1].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.ph});\n    }    \n}\n}\nelse\n{\n   for(  i=0; i < msg.payload.length; i++ ) {\n        name1 = msg.payload[i].payload.name;\n    if( (msg.payload[i].payload.time >= starttime) && (msg.payload[i].payload.time <= endtime)&&(devicelocation.includes(name1)) ) {\n        // This temperature reading is within the Date Range\n        chart[0].data[0].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.humidity});\n                     \n        chart[0].data[1].push({\"x\":msg.payload[i].payload.time,\"y\":msg.payload[i].payload.ph});\n    }    \n} \n}\n// Now we need to sort on the time so that we give the Chart node an array in time order\nchart[0].data[0].sort(function sortNumber(a,b) { return a.x - b.x; });\nchart[0].data[1].sort(function sortNumber(a,b) { return a.x - b.x; });\nmsg.payload = chart;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":230,"y":900,"wires":[["e1d6f01d.45fe7"]]},{"id":"e1d6f01d.45fe7","type":"ui_chart","z":"a69dfb2e.39c3a8","name":"","group":"ae5d9d70.17b2","order":3,"width":0,"height":0,"label":"Humidity-Ph","chartType":"line","legend":"true","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":true,"ymin":"","ymax":"","removeOlder":"1","removeOlderPoints":"100","removeOlderUnit":"3600","cutout":0,"useOneColor":true,"useUTC":false,"colors":["#1f77b4","#ac0678","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":590,"y":900,"wires":[[]]},{"id":"dc171215.50da","type":"ibmiot in","z":"a69dfb2e.39c3a8","authentication":"boundService","apiKey":"","inputType":"evt","logicalInterface":"","ruleId":"","deviceId":"","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"IBM IoT","service":"registered","allDevices":"","allApplications":"","allDeviceTypes":true,"allLogicalInterfaces":"","allEvents":true,"allCommands":"","allFormats":"","qos":0,"x":90,"y":180,"wires":[["2a2961d8.81384e","74f8eabd.ee1904","1159c031.b7764","d7c95dd9.9bf9b","8e940ae7.59fc48"]]},{"id":"59efdf1d.cae3b","type":"worldmap","z":"a69dfb2e.39c3a8","name":"","lat":"28","lon":"100","zoom":"4","layer":"Nat Geo","cluster":"","maxage":"","usermenu":"show","layers":"show","panit":"true","panlock":"false","zoomlock":"false","hiderightclick":"false","coords":"deg","showgrid":"true","path":"/worldmap","x":920,"y":740,"wires":[]},{"id":"a81efede.8c58","type":"ui_template","z":"a69dfb2e.39c3a8","group":"128985cc.86390a","name":"HEADER","order":6,"width":0,"height":0,"format":"<style>\n    body {\n        background-image: url(\"/images/plant-stages.jpg\");\n        background-size: cover;\n    }\n    .md-toolbar-tools{\n        background-image: url(\"/images/Logo.png\");\n       background-repeat: no-repeat;\n        margin-left: 0;\n        background-size: 250px 80px;\n        background-position: 712px;\n        \n    }\n    .md-toolbar-tools h1{\n        text-align: left;\n        width: 300px;\n    }\n</style>\n\n\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":false,"templateScope":"global","x":540,"y":1680,"wires":[[]]},{"id":"98709fa2.56cef","type":"ui_template","z":"a69dfb2e.39c3a8","group":"147237fe.b2b0c8","name":"Video Player","order":1,"width":14,"height":12,"format":"<div class=\"text\"><br>KSHETRIK-MITRA App showing Real Time Data Monitoring.It uses distinct color to show current status of Water Quality.Alert message is displayed whenever value crosses the permissible range.<br>\n    </div>\n<div id=\"video1\">\n    <video width=\"720\" height=\"500\" controls>\n    <source ng-src=\"/Videos/RealTimeMonitoring1.mp4\">\n    \n</video>    \n</div>\n<style>.text {\n    display: inline-block;\n    vertical-align: middle;\n    width: calc(100% - 80px);    \n}</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":210,"y":1780,"wires":[[]]},{"id":"84389569.299f68","type":"ui_template","z":"a69dfb2e.39c3a8","group":"bdb8630c.46b0f","name":"Real Image","order":1,"width":14,"height":12,"format":"<div class=\"cf\">\n    <img src=\"/images/AnyDeviceRunnable (2).jpeg\" width=\"710px\" height=\"500px\"/><div class=\"text\">KSHETRIK-MITRA is User friendly Application allowing the user to interact in a natural and intuitive way. It is accessible from any device supporting browser. It is easy to learn.\n    With a very basic training one can make best use of Application. Color signal is used for Indicating threat level of each parameter. \n    </div>\n</div>\n<style>\n\nimg {\n    display: inline-block;\n    vertical-align: left;\n    width: 710px;\n}\n.text {\n    display: inline-block;\n    vertical-align: middle;\n    width: calc(100% - 80px); \n   \n}\n\n</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":410,"y":1780,"wires":[[]]},{"id":"422896bd.7efc48","type":"ui_template","z":"a69dfb2e.39c3a8","group":"4d0a9d33.8f35c4","name":"ABOUT","order":1,"width":"27","height":"9","format":"<div class=\"cf\">\n    <img src=\"/images/Logo.png\" width=\"500px\" height=\"400px\"/>\n   <p><br> KSHETRIK-MITRA Application provides a Cloud based Solution to the Water Quality problems faced by farmers worldwide. Its user friendly and provides an accurate water quality monitoring system.<br><br>\nProduct Highlights:<br><br>\n1) Monitoring real time data: Helps avoiding the crop destruction and degradation of crop quality due to use of contaminated water for irrigation .Alert the User if WQ crosses tolerance.<br><br>\n  \n2) Analysis of Water Quality Behavior: Helps in understanding the behavior of Water Quality in an area throughout season.<br><br>\n3) It helps improving the Quality of agriculture products and maximizing the farm production.<br><br>\n \n 4) Ease of installation:  Integrating of New Devices/Sensors with Application is dynamic and effortless without making changes in application.\n \n\t</p>\n</div>\n<style>\n\nimg {\n    float:left;\n    margin-right:10px;\n    margin-bottom:5px;\n    border:solid black 1px;\n    padding:2px;\n    \n    width: 500px;\n}\n\n</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":660,"y":1780,"wires":[[]]},{"id":"7f4a73ee.f2553c","type":"comment","z":"a69dfb2e.39c3a8","name":"Templates for Header,Video player,Showing real image and About","info":"","x":400,"y":1620,"wires":[]},{"id":"e4da3d6b.1e9e8","type":"ui_template","z":"a69dfb2e.39c3a8","group":"8f44f5d0.3887b8","name":"","order":12,"width":"8","height":"6","format":"<div class=\"cf\">\n    <img src=\"/images/farmers.jpg\" width=\"405px\" height=\"305px\"/>\n</div>\n<style>\n\nimg {\n    display: inline-block;\n    vertical-align: left;\n    width: 405px;\n}\n\n\n</style>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":770,"y":1680,"wires":[[]]},{"id":"3c1cc75.b98d338","type":"cloudant","z":"","host":"https://16ad429e-9d49-4534-afa9-7955a9981991-bluemix:b95ca428fb2cd18ae9106e393f14eb7c45d82fd58bb53c5a04f821607b0e268e@16ad429e-9d49-4534-afa9-7955a9981991-bluemix.cloudant.com","name":"cloudant-xh"},{"id":"b6db82d0.79eb8","type":"ui_group","z":"","name":"TEMPERATURE","tab":"7ccd79e1.133eb8","order":4,"disp":true,"width":"8","collapse":true},{"id":"bdac16da.cd72b8","type":"ui_group","z":"","name":"HUMIDITY","tab":"2649f3ad.c3067c","order":2,"disp":true,"width":"9","collapse":true},{"id":"20e8f87e.0a7ee8","type":"ui_group","z":"","name":"TEMPERATURE","tab":"2649f3ad.c3067c","order":2,"disp":true,"width":"9","collapse":true},{"id":"8f44f5d0.3887b8","type":"ui_group","z":"","name":"CHART CONTROLS","tab":"7ccd79e1.133eb8","order":2,"disp":true,"width":"8","collapse":true},{"id":"42f22c1.0d5fbd4","type":"ui_group","z":"","name":"HUMIDITY","tab":"7ccd79e1.133eb8","order":3,"disp":true,"width":"8","collapse":true},{"id":"72724859.87e4a8","type":"ui_group","z":"","name":"WORLD MAP","tab":"7ccd79e1.133eb8","order":1,"disp":true,"width":"16","collapse":true},{"id":"2828a1e9.86226e","type":"ui_group","z":"","name":"PH-SCALE","tab":"2649f3ad.c3067c","order":3,"disp":true,"width":"9","collapse":true},{"id":"ae5d9d70.17b2","type":"ui_group","z":"","name":"PH-VALUE","tab":"7ccd79e1.133eb8","order":5,"disp":true,"width":"8","collapse":true},{"id":"128985cc.86390a","type":"ui_group","z":"","name":"check","tab":"","order":2,"disp":true,"width":"6","collapse":false},{"id":"147237fe.b2b0c8","type":"ui_group","z":"","name":"REAL TIME MONITORING SAMPLE VIDEO","tab":"b6c1bff0.a072e","order":3,"disp":true,"width":"14","collapse":true},{"id":"bdb8630c.46b0f","type":"ui_group","z":"","name":"PORTABLE","tab":"b6c1bff0.a072e","order":2,"disp":true,"width":14,"collapse":true},{"id":"4d0a9d33.8f35c4","type":"ui_group","z":"","name":"KSHETRIK-MITRA APPLICATION","tab":"b6c1bff0.a072e","order":1,"disp":true,"width":"28","collapse":true},{"id":"7ccd79e1.133eb8","type":"ui_tab","z":"","name":"STORED DATA VIEW","icon":"dashboard","order":3,"disabled":false,"hidden":false},{"id":"2649f3ad.c3067c","type":"ui_tab","z":"","name":"REAL DATA MONITORING","icon":"dashboard","order":2,"disabled":false,"hidden":false},{"id":"b6c1bff0.a072e","type":"ui_tab","z":"","name":"ABOUT","icon":"dashboard","order":1,"disabled":false,"hidden":false}]